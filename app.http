# VSCode REST Client — Applied Project API
# Each request is separated by `###`. Keep one blank line between headers and JSON body.

@baseUrl = http://localhost:8000
@EMAIL = admin@example.com
@PASSWORD = Passw0rd!
@ROLE = COORDINATION

### (Optional) Health check
GET {{baseUrl}}/healthz

### (Optional) Version
GET {{baseUrl}}/version

### Register user
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "email": "{{EMAIL}}",
  "password": "{{PASSWORD}}",
  "role": "{{ROLE}}"
}

### Login (cookie mode) — server may set HttpOnly cookies if USE_COOKIE_AUTH=true
# @name login_cookie
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{EMAIL}}",
  "password": "{{PASSWORD}}"
}

### Me (cookie mode)
GET {{baseUrl}}/auth/me

### Logout (cookie mode)
POST {{baseUrl}}/auth/logout

### Login (bearer mode) — captures tokens into response variables
# @name login_bearer
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{EMAIL}}",
  "password": "{{PASSWORD}}"
}

### Me (bearer mode) using token from previous login (response variable)
GET {{baseUrl}}/auth/me
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

### Refresh (bearer mode) using refresh_token from previous login
POST {{baseUrl}}/auth/refresh
Authorization: Bearer {{login_bearer.response.body.$.refresh_token}}

### Logout (bearer mode) — only clears cookies if any; JWTs are stateless
POST {{baseUrl}}/auth/logout

# ---- Optional protected routes (only if your app includes them) ----

### Protected: FAMILY only
GET {{baseUrl}}/auth/only-family
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

### Protected: PROFESSIONAL
GET {{baseUrl}}/auth/only-professional
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

### Protected: COORDINATION
GET {{baseUrl}}/auth/only-coordination
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

# ---- Manual-bearer fallbacks (paste token if your server doesn't return tokens in cookie mode) ----

### Me (bearer mode — manual paste)
GET {{baseUrl}}/auth/me
Authorization: Bearer <ACCESS_TOKEN>

### Refresh (bearer mode — manual paste)
POST {{baseUrl}}/auth/refresh
Authorization: Bearer <REFRESH_TOKEN>

### Dashboard Family: List My Appointments

GET {{baseUrl}}/dashboard/family/appointments?range=upcoming&page=1&page_size=10
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

### 
GET {{baseUrl}}/dashboard/family/appointments?range=past&status=DONE
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

###
GET {{baseUrl}}/dashboard/family/appointments?date_from=2025-09-01T00:00:00Z&date_to=2025-09-30T23:59:59Z&q=fono
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

### Professional Dashboard: My Schedule
### Semana atual (TZ São Paulo)
GET {{baseUrl}}/dashboard/professional/schedule/week
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

### Semana de 2025-09-08 (segunda→domingo)
GET {{baseUrl}}/dashboard/professional/schedule/week?week_start=2025-09-08
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

### Filtrar apenas CONFIRMED/DONE
GET {{baseUrl}}/dashboard/professional/schedule/week?statuses=CONFIRMED&statuses=DONE
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

### Coordination Dashboard: Overview
### Semana atual (padrão):
GET {{baseUrl}}/dashboard/coordination/overview
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

### Semana que contém 2025-09-08 (seg→dom):
GET {{baseUrl}}/dashboard/coordination/overview?week_start=2025-09-08
Authorization: Bearer {{login_bearer.response.body.$.access_token}}

### Janela arbitrária (ex.: 2025-09-01 até 2025-09-15):
GET {{baseUrl}}/dashboard/coordination/overview?date_from=2025-09-01&date_to=2025-09-15
Authorization: Bearer {{login_bearer.response.body.$.access_token}}
