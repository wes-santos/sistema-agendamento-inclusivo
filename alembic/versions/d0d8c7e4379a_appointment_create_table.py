"""appointment: create table

Revision ID: d0d8c7e4379a
Revises: 667634bd82ae
Create Date: 2025-09-06 15:21:20.475562

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d0d8c7e4379a"
down_revision: str | Sequence[str] | None = "667634bd82ae"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "appointments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("family_id", sa.Integer(), nullable=False),
        sa.Column("professional_id", sa.Integer(), nullable=False),
        sa.Column("service", sa.String(length=120), nullable=False),
        sa.Column("location", sa.String(length=160), nullable=True),
        sa.Column("start_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("end_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "SCHEDULED",
                "CONFIRMED",
                "CANCELLED",
                "DONE",
                name="appointment_status_enum",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["family_id"], ["users.id"], name=op.f("fk_appointments_family_id_users")
        ),
        sa.ForeignKeyConstraint(
            ["professional_id"],
            ["users.id"],
            name=op.f("fk_appointments_professional_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_appointments")),
    )
    op.create_index(
        op.f("ix_appointments_family_id"), "appointments", ["family_id"], unique=False
    )
    op.create_index(
        "ix_appt_family_start", "appointments", ["family_id", "start_at"], unique=False
    )
    op.create_index(
        "ix_appt_family_status_start",
        "appointments",
        ["family_id", "status", "start_at"],
        unique=False,
    )
    op.alter_column(
        "users",
        "is_active",
        existing_type=sa.BOOLEAN(),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.drop_index(op.f("ix_user_email"), table_name="users")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_index(op.f("ix_user_email"), "users", ["email"], unique=True)
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("CURRENT_TIMESTAMP"),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "is_active",
        existing_type=sa.BOOLEAN(),
        server_default=sa.text("true"),
        existing_nullable=False,
    )
    op.drop_index("ix_appt_family_status_start", table_name="appointments")
    op.drop_index("ix_appt_family_start", table_name="appointments")
    op.drop_index(op.f("ix_appointments_family_id"), table_name="appointments")
    op.drop_table("appointments")
    # ### end Alembic commands ###
