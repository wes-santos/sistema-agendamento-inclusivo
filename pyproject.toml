[tool.poetry]
name = "sistema-agendamento-inclusivo"
version = "0.1.0"
description = "MVP de agendamento online (PA â€“ XPe) com FastAPI"
authors = ["Wes <you@example.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.30.0"}
sqlalchemy = "^2.0.0"
alembic = "^1.13.0"
psycopg = {extras = ["binary"], version = "^3.2.0"}     # driver Postgres
pydantic-settings = "^2.4.0"
jinja2 = "^3.1.0"
apscheduler = "^3.10.0"
passlib = {extras = ["bcrypt"], version = "^1.7.0"}
pyjwt = "^2.9.0"
email-validator = "^2.2.0"
python-multipart = "^0.0.9"
structlog = "^25.4.0"
python-jose = "^3.5.0"
argon2-cffi = "^25.1.0"
itsdangerous = "^2.2.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.0"
black = "^24.8.0"
isort = "^5.13.2"
pre-commit = "^3.8.0"
pytest = "^8.3.0"
httpx = "^0.27.0"
pytest-asyncio = "^0.23.0"
anyio = "^4.4.0"

[tool.black]
line-length = 88
target-version = ["py313"]

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["app"]
combine_as_imports = true

[tool.ruff]
line-length = 88
target-version = "py313"
select = [
  "E",
  "F",
  "I",
  "UP",
  "B",
  "SIM",
  "PL",
  "RUF"
]
ignore = ["E203"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

