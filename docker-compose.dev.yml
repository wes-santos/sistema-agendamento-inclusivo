services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    # Na 1ª vez, garanta deps instaladas; depois fica cacheado no volume venv
    command: >
      sh -lc 'poetry install --no-root --with dev && exec poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload'
    env_file: .env.dev
    environment:
      TZ: America/Sao_Paulo
    ports:
      - "8000:8000"
    volumes:
      - ./:/app:rw,delegated
      - ./.venv:/app/.venv
    depends_on:
      - db
      - mailhog

  db:
    image: postgres:16
    container_name: agenda_db_dev
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: agenda_dev
      TZ: America/Sao_Paulo
    ports:
      - "5432:5432"
    volumes:
      - pgdata_dev:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:8
    # a tag 9 não existe; use uma estável (8.x). Ajuste se quiser outra versão.
    container_name: agenda_pgadmin_dev
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "True"
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: "10"
      TZ: America/Sao_Paulo
    ports:
      - "5050:80"     # http://localhost:5050
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json:ro

  mailhog:
    image: mailhog/mailhog
    container_name: agenda_mailhog_dev
    ports:
      - "8025:8025"   # UI web
      - "1025:1025"   # SMTP

  reminder-cron:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agenda_reminder_cron
    working_dir: /app
    env_file:
      - .env.dev
    volumes:
      - ./:/app:rw,delegated
      - ./.venv:/app/.venv
    command: >
      sh -lc 'poetry install --no-root --with dev && while :; do poetry run python -m app.jobs.remind_t24 || true; sleep 60; done'
    depends_on:
      - db
      - mailhog
      - api

volumes:
  pgdata_dev:
  pgadmin_data:
